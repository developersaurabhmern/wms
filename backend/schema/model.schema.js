var mongoose = require('mongoose');
var Schema = mongoose.Schema;

const transcams = new Schema({
    AMC_CODE: { type: String },
    FOLIO_NO: { type: String },
    PRODCODE: { type: String },
    SCHEME: { type: String },
    INV_NAME: { type: String },
    TRXNTYPE: { type: String },
    TRXNNO: { type: String },
    TRXNMODE: { type: String },
    TRXNSTAT: { type: String },
    USERCODE: { type: String },
    USRTRXNO: { type: String },
    TRADDATE: { type: Date },
    POSTDATE: { type: Date },
    PURPRICE: { type: Number },
    UNITS: { type: Number },
    AMOUNT: { type: Number },
    BROKCODE: { type: String },
    SUBBROK: { type: String },
    BROKPERC: { type: String },
    BROKCOMM: { type: String },
    ALTFOLIO: { type: String },
    REP_DATE: { type: Date },
    TIME1: { type: String },
    TRXNSUBTYP: { type: String },
    APPLICATIO: { type: String },
    TRXN_NATUR: { type: String },
    TAX: { type: Number },
    TOTAL_TAX: { type: Number },
    TE_15H: { type: String },
    MICR_NO: { type: String },
    REMARKS: { type: String },
    SWFLAG: { type: String },
    OLD_FOLIO: { type: String},
    SEQ_NO: { type: String },
    REINVEST_F: { type: String},
    MULT_BROK: { type: String },
    STT: { type: Number },
    LOCATION: { type: String },
    SCHEME_TYP: { type: String },
    TAX_STATUS: { type: String },
    LOAD: { type: Number },
    SCANREFNO: { type: String },
    PAN: { type: String },
    INV_IIN: { type: String },
    TARG_SRC_S: { type: String },
    TRXN_TYPE_: { type: String },
    TICOB_TRTY: { type: String },
    TICOB_TRNO: { type: String },
    TICOB_POST: { type: String },
    DP_ID: { type: String },
    TRXN_CHARG: { type: Number },
    ELIGIB_AMT: { type: Number },
    SRC_OF_TXN: { type: String },
    TRXN_SUFFI: { type: String },
    SIPTRXNNO: { type: String },
    TER_LOCATI: { type: String },
    EUIN: { type: String },
    EUIN_VALID: { type: String },
    EUIN_OPTED: { type: String },
    SUB_BRK_AR: { type: String },
    EXCH_DC_FL: { type: String },
    SRC_BRK_CO: { type: String },
    SYS_REGN_D: { type: String },
    AC_NO: { type: String },
    BANK_NAME: { type: String },
    REVERSAL_C: { type: String },
    EXCHANGE_F: { type: String },
    CA_INITIAT: { type: String },
    GST_STATE_: { type: String },
    IGST_AMOUN: { type: Number },
    CGST_AMOUN: { type: Number },
    SGST_AMOUN: { type: Number },
    REV_REMARK: { type: String},
    ORIGINAL_T: { type: String},
    STAMP_DUTY: { type: Number},
    FOLIO_OLD: { type: String},
    SCHEME_FOL: { type: String},
    AMC_REF_NO: { type: String},
    REQUEST_RE: { type: String},
    USER_ID: { type: String },
}, { versionKey: false });

const transcams2A = new Schema({
    AMC_CODE: { type: String },
    FOLIO_NO: { type: String },
    PRODCODE: { type: String },
    SCHEME: { type: String },
    INV_NAME: { type: String },
    TRXNTYPE: { type: String },
    TRXNNO: { type: String },
    TRXNMODE: { type: String },
    TRXNSTAT: { type: String },
    USERCODE: { type: String },
    USRTRXNO: { type: String },
    TRADDATE: { type: Date },
    POSTDATE: { type: Date },
    PURPRICE: { type: Number },
    UNITS: { type: Number },
    AMOUNT: { type: Number },
    BROKCODE: { type: String },
    SUBBROK: { type: String },
    BROKPERC: { type: String },
    BROKCOMM: { type: String },
    ALTFOLIO: { type: String },
    REP_DATE: { type: Date },
    TIME1: { type: String },
    TRXNSUBTYP: { type: String },
    APPLICATIO: { type: String },
    TRXN_NATUR: { type: String },
    TAX: { type: Number },
    TOTAL_TAX: { type: Number },
    TE_15H: { type: String },
    MICR_NO: { type: String },
    REMARKS: { type: String },
    SWFLAG: { type: String },
    OLD_FOLIO: { type: String},
    SEQ_NO: { type: String },
    REINVEST_F: { type: String},
    MULT_BROK: { type: String },
    STT: { type: Number },
    LOCATION: { type: String },
    SCHEME_TYP: { type: String },
    TAX_STATUS: { type: String },
    LOAD: { type: Number },
    SCANREFNO: { type: String },
    PAN: { type: String },
    INV_IIN: { type: String },
    TARG_SRC_S: { type: String },
    TRXN_TYPE_: { type: String },
    TICOB_TRTY: { type: String },
    TICOB_TRNO: { type: String },
    TICOB_POST: { type: String },
    DP_ID: { type: String },
    TRXN_CHARG: { type: Number },
    ELIGIB_AMT: { type: Number },
    SRC_OF_TXN: { type: String },
    TRXN_SUFFI: { type: String },
    SIPTRXNNO: { type: String },
    TER_LOCATI: { type: String },
    EUIN: { type: String },
    EUIN_VALID: { type: String },
    EUIN_OPTED: { type: String },
    SUB_BRK_AR: { type: String },
    EXCH_DC_FL: { type: String },
    SRC_BRK_CO: { type: String },
    SYS_REGN_D: { type: String },
    AC_NO: { type: String },
    BANK_NAME: { type: String },
    REVERSAL_C: { type: String },
    EXCHANGE_F: { type: String },
    CA_INITIAT: { type: String },
    GST_STATE_: { type: String },
    IGST_AMOUN: { type: Number },
    CGST_AMOUN: { type: Number },
    SGST_AMOUN: { type: Number },
    REV_REMARK: { type: String},
    ORIGINAL_T: { type: String},
    STAMP_DUTY: { type: Number},
    FOLIO_OLD: { type: String},
    SCHEME_FOL: { type: String},
    AMC_REF_NO: { type: String},
    REQUEST_RE: { type: String},
    USER_ID: { type: String },
}, { versionKey: false });

const transkarvy = new Schema({
    FMCODE: { type: String },
    TD_FUND: { type: String },
    TD_SCHEME: { type: String },
    TD_PLAN: { type: String },
    TD_ACNO: { type: String , length: 800},
    SCHPLN: { type: String },
    DIVOPT: { type: String },
    FUNDDESC: { type: String },
    TD_PURRED: { type: String },
    TD_TRNO: { type: String },
    SMCODE: { type: String },
    CHQNO: { type: String },
    INVNAME: { type: String },
    TRNMODE: { type: String },
    TRNSTAT: { type: String },
    TD_BRANCH: { type: String },
    ISCTRNO: { type: String },
    TD_TRDT: { type: Date },
    TD_PRDT: { type: Date },
    TD_UNITS: { type: Number },
    TD_AMT: { type: Number },
    TD_AGENT: { type: String },
    TD_BROKER: { type: String },
    BROKPER: { type: String },
    BROKCOMM: { type: String },
    INVID: { type: String },
    CRDATE: { type: Date },
    CRTIME: { type: String },
    TRNSUB: { type: String },
    TD_APPNO: { type: String },
    UNQNO: { type: String },
    TRDESC: { type: String },
    TD_TRTYPE: { type: String },
    NAVDATE: { type: Date },
    PORTDT: { type: Date },
    ASSETTYPE: { type: String },
    SUBTRTYPE: { type: String },
    CITYCATEG0: { type: String },
    EUIN: { type: String },
    TRCHARGES: { type: String },
    CLIENTID: { type: String },
    DPID: { type: String },
    STT: { type: String },
    IHNO: { type: String },
    BRANCHCODE: { type: String },
    INWARDNUM1: { type: String },
    PAN1: { type: String },
    PAN2: { type: String },
    PAN3: { type: String },
    TDSAMOUNT: { type: String },
    CHQDATE: { type: String },
    CHQBANK: { type: String },
    TRFLAG: { type: String },
    LOAD1: { type: String },
    BROK_ENTDT: { type: String },
    NCTREMARKS: { type: String },
    PRCODE1: { type: String },
    STATUS: { type: String },
    SCHEMEISIN: { type: String },
    TD_NAV: { type: Number },
    INSAMOUNT: { type: String },
    REJTRNOOR2: { type: String },
    EVALID: { type: String },
    EDECLFLAG: { type: String },
    SUBARNCODE: { type: String },
    ATMCARDRE3: { type: String },
    ATMCARDST4: { type: String },
    SCH1: { type: String },
    PLN1: { type: String },
    TD_TRXNMO5: { type: String },
    NEWUNQNO: { type: String },
    SIPREGDT: { type: String },
    SIPREGSLNO: { type: String },
    DIVPER: { type: String },
    CAN: { type: String },
    EXCHORGTR6: { type: String },
    ELECTRXNF7: { type: String },
    CLEARED: { type: String },
    BROK_VALU8: { type: String },
    TD_POP: { type: Number },
    INVSTATE: { type: String },
    STAMPDUTY: { type: String }, 
    USER_ID: { type: String },   
}, { versionKey: false });

const transfranklin = new Schema({
    COMP_CODE: { type: String },
    SCHEME_CO0: { type: String },
    SCHEME_NA1: { type: String },
    FOLIO_NO: { type: String },
    TRXN_TYPE: { type: String },
    TRXN_NO: { type: String },
    INVESTOR_2: { type: String },
    TRXN_DATE: { type: Date },
    POSTDT_DA3: { type: Date },
    NAV: { type: Number },
    POP: { type: Number },
    UNITS: { type: Number },
    AMOUNT: { type: Number },
    JOINT_NAM1: { type: String },
    JOINT_NAM2: { type: String },
    ADDRESS1: { type: String },
    ADDRESS2: { type: String },
    ADDRESS3: { type: String },
    CITY: { type: String },
    PIN_CODE: { type: String },
    STATE: { type: String },
    COUNTRY: { type: String },
    D_BIRTH: { type: String },
    PHONE_RES: { type: String },
    PHONE_OFF: { type: String },
    TAX_STATUS: { type: String },
    EMAIL: { type: String },
    TRXN_MODE: { type: String },
    TRXN_STAT: { type: String },
    TRXN_ID: { type: String },
    IT_PAN_NO1: { type: String },
    IT_PAN_NO2: { type: String },
    IT_PAN_NO3: { type: String },
    ISIN: { type: String },
    ACCOUNT_16: { type: String },
    SOCIAL_S18: { type: String },
    HOLDING_19: { type: String },
    PLAN_TYPE: { type: String },
    BRANCH_C21: { type: String },
    PBANK_NAME: { type: String },
    PERSONAL23: { type: String },
    NOMINEE1: { type: String },
    NOMINEE2: { type: String },
    NOMINEE3: { type: String },
    NOMINEE_39: { type: String },
    ACCOUNT_25: { type: String },
}, { versionKey: false });

const navcams = new Schema({
    SchemeCode: { type: String },
    ISINDivPayoutISINGrowth: { type: String },
    ISINDivReinvestment: { type: String },
    SchemeName: { type: String, required: true },
    NetAssetValue: { type: Number },
    Date: { type: Date },
}, { versionKey: false });

const loginmodel = new Schema({
    NAME: { type: String },
    EMAIL: { type: String },
    PASSWORD: { type: String },
    USERTYPE: { type: String },
    MOBILE:{ type: String},
    PAN:{ type: String},
    LEADERPAN:{ type: String},
    RELATION:{ type: String},
    DOB:{ type: String},
    ADDRESS:{ type: String},
    PINCODE:{ type: String},
    CITY:{ type: String},
    STATE:{ type: String},
    COUNTRY:{ type: String},
    IIN_PORTFOLIO:{ type: String},
    DATE: { type: Date },
})

const members = new Schema({
    memberPan: { type: String },
    adminPan: { type: String },
    memberRelation: { type: String },
    email:{ type: String },
    date: { type: Date},
}, { versionKey: false });

const productdata = new Schema({
    id: { type: String },
    product_master_diffgr_id: { type: String },
    msdata_rowOrder: { type: String },
    AMC_CODE: { type: String },
    PRODUCT_CODE: { type: String },
    PRODUCT_LONG_NAME: { type: String },
    SYSTEMATIC_FREQUENCIES: { type: String },
    SIP_DATES: { type: String },
    STP_DATES: { type: String },
    SWP_DATES: { type: String },
    PURCHASE_ALLOWED: { type: String },
    SWITCH_ALLOWED: { type: String },
    REDEMPTION_ALLOWED: { type: String },
    SIP_ALLOWED: { type: String },
    STP_ALLOWED: { type: String },
    SWP_ALLOWED: { type: String },
    REINVEST_TAG: { type: String },
    PRODUCT_CATEGORY: { type: String },
    ISIN: { type: String },
    LAST_MODIFIED_DATE: { type: String },
    ACTIVE_FLAG: { type: String },
    ASSET_CLASS: { type: String },
    SUB_FUND_CODE: { type: String },
    PLAN_TYPE: { type: String },
    INSURANCE_ENABLED: { type: String },
    RTACODE: { type: String },
    NFO_ENABLED: { type: String },
    NFO_CLOSE_DATE: { type: String },
    NFO_SIP_EFFECTIVE_DATE: { type: String },
    ALLOW_FREEDOM_SIP: { type: String },
    ALLOW_FREEDOM_SWP: { type: String },
    ALLOW_DONOR: { type: String },
    ALLOW_PAUSE_SIP: { type: String },
    ALLOW_PAUSE_SIP_FREQ: { type: String },
    PAUSE_SIP_MIN_MONTH: { type: String },
    PAUSE_SIP_MAX_MONTH: { type: String },
    PAUSE_SIP_GAP_PERIOD: { type: String },
}, { versionKey: false });

const foliocams = new Schema({
    FOLIOCHK: { type: String },
    INV_NAME: { type: String },
    ADDRESS1: { type: String },
    ADDRESS2: { type: String },
    ADDRESS3: { type: String },
    CITY: { type: String },
    PINCODE: { type: String },
    PRODUCT: { type: String },
    SCH_NAME: { type: String },
    REP_DATE: { type: Date },
    CLOS_BAL: { type: Number },
    RUPEE_BAL: { type: Number },
    JNT_NAME1: { type: String },
    JNT_NAME2: { type: String },
    PHONE_OFF: { type: String },
    PHONE_RES: { type: String },
    EMAIL: { type: String },
    HOLDING_NA: { type: String },
    UIN_NO: { type: String },
    PAN_NO: { type: String },
    JOINT1_PAN: { type: String },
    JOINT2_PAN: { type: String },
    GUARD_PAN: { type: String },
    TAX_STATUS: { type: String },
    BROKER_COD: { type: String },
    SUBBROKER: { type: String },
    REINV_FLAG: { type: String },
    BANK_NAME: { type: String },
    BRANCH: { type: String },
    AC_TYPE: { type: String },
    AC_NO: { type: String },
    B_ADDRESS1: { type: String },
    B_ADDRESS2: { type: String },
    B_ADDRESS3: { type: String },
    B_CITY: { type: String },
    B_PINCODE: { type: String },
    INV_DOB: { type: String },
    MOBILE_NO: { type: String },
    OCCUPATION: { type: String },
    INV_IIN: { type: String },
    NOM_NAME: { type: String },
    RELATION: { type: String },
    NOM_ADDR1: { type: String },    
    NOM_ADDR2: { type: String },    
    NOM_ADDR3: { type: String },    
    NOM_CITY: { type: String },    
    NOM_STATE: { type: String },    
    NOM_PINCOD: { type: String },  
    NOM_PH_OFF: { type: String },  
    NOM_PH_RES: { type: String },  
    NOM_EMAIL: { type: String },  
    NOM_PERCEN: { type: String },
    NOM2_NAME: { type: String },  
    NOM2_RELAT: { type: String },
    NOM2_ADDR1: { type: String }, 
    NOM2_ADDR2: { type: String }, 
    NOM2_ADDR3: { type: String }, 
    NOM2_CITY: { type: String }, 
    NOM2_STATE: { type: String }, 
    NOM2_PINCO: { type: String }, 
    NOM2_PH_OF: { type: String }, 
    NOM2_PH_RE: { type: String }, 
    NOM2_EMAIL: { type: String }, 
    NOM2_PERCE: { type: String }, 
    NOM3_NAME: { type: String }, 
    NOM3_RELAT: { type: String }, 
    NOM3_ADDR1: { type: String }, 
    NOM3_ADDR2: { type: String }, 
    NOM3_ADDR3: { type: String }, 
    NOM3_CITY: { type: String }, 
    NOM3_STATE: { type: String }, 
    NOM3_PINCO: { type: String }, 
    NOM3_PH_OF: { type: String }, 
    NOM3_PH_RE: { type: String }, 
    NOM3_EMAIL: { type: String }, 
    NOM3_PERCE: { type: String }, 
    IFSC_CODE: { type: String }, 
    DP_ID: { type: String },
    DEMAT: { type: String },
    GUARD_NAME: { type: String },
    BROKCODE: { type: String },
    FOLIO_DATE: { type: Date },
    AADHAAR: { type: String},
    TPA_LINKED: { type: String},
    FH_CKYC_NO: { type: String},
    JH1_CKYC: { type: String},
    JH2_CKYC: { type: String},
    G_CKYC_NO: { type: String},
    JH1_DOB: { type: String},
    JH2_DOB: { type: String},
    GUARDIAN_D: { type: String},
    AMC_CODE: { type: String },
    GST_STATE_: { type: String},
    FOLIO_OLD: { type: String},
    SCHEME_FOL: { type: String},
    USER_ID: { type: String },
}, { versionKey: false });


const foliokarvy = new Schema({
    PRCODE: { type: String },
    FUND: { type: String },
    ACNO: { type: String, length: 800 },
    FUNDDESC: { type: String },
    INVNAME: { type: String ,index: true,},
    JTNAME1: { type: String },
    JTNAME2: { type: String },
    ADD1: { type: String },
    ADD2: { type: String },
    ADD3: { type: String },
    CITY: { type: String },
    PIN: { type: String },
    STATE: { type: String },
    COUNTRY: { type: String },
    TPIN: { type: String },
    DOB: { type: String },
    FNAME: { type: String },
    MNAME: { type: String },
    RPHONE: { type: String },
    PH_RES1: { type: String },
    PH_RES2: { type: String },
    OPHONE: { type: String },
    PH_OFF1: { type: String },
    PH_OFF2: { type: String },
    FAX: { type: String },
    FAX_OFF: { type: String },
    STATUS: { type: String },
    OCCPN: { type: String },
    EMAIL: { type: String },
    BNKACNO: { type: String },
    BNAME: { type: String },
    BNKACTYPE: { type: String },
    BRANCH: { type: String },
    BADD1: { type: String },
    BADD2: { type: String },
    BADD3: { type: String },
    BCITY: { type: String },
    BPHONE: { type: String },
    BSTATE: { type: String },
    BCOUNTRY: { type: String },
    INV_ID: { type: String },
    BROKCODE: { type: String },
    CRDATE: { type: Date },
    CRTIME: { type: String },
    PANGNO: { type: String },
    MOBILE: { type: String },
    DIVOPT: { type: String },
    OCCP_DESC: { type: String },
    MODEOFHOLD: { type: String },
    MAPIN: { type: String },
    PAN2: { type: String },
    PAN3: { type: String },
    IMCATEGORY: { type: String },
    GUARDIANN0: { type: String },
    NOMINEE: { type: String },
    CLIENTID: { type: String },
    // DPID: { type: String },
    // CATEGORYD1: { type: String },
    STATUSDESC: { type: String },
    IFSC: { type: String },
    NOMINEE2: { type: String },
    NOMINEE3: { type: String },
    KYC1FLAG: { type: String },
    KYC2FLAG: { type: String },
    KYC3FLAG: { type: String },
    GUARDPANNO: { type: String },
    //LASTUPDAT1: { type: Date },
    LASTUPDAT0: { type: Date },
    //CAN: { type: String },
    NOMINEEREL: { type: String },
    NOMINEE2R2: { type: String },
    NOMINEE3R3: { type: String },
    // NOMINEE2R1: { type: String },
    // NOMINEE3R2: { type: String },
    // NOMINEERA3: { type: String },
    // NOMINEE2R4: { type: String },
    // NOMINEE3R5: { type: String },
    ADRH1INFO: { type: String },
    ADRH2INFO: { type: String },
    ADRH3NFO: { type: String },
    ADRGINFO: { type: String },   
    USER_ID: { type: String },
}, { versionKey: false });

const foliofranklin = new Schema({
    BANK_CODE: { type: String },
    IFSC_CODE: { type: String },
    NEFT_CODE: { type: String },
    NOMINEE1: { type: String },
    FOLIO_NO: { type: String },
    INV_NAME: { type: String },
    JOINT_NAM1: { type: String },
    ADDRESS1: { type: String },
    BANK_NAME: { type: String },
    ACCNT_NO: { type: String },
    D_BIRTH: { type: String },
    F_NAME: { type: String },
    PHONE_RES: { type: String },
    PANNO1: { type: String },
    COMP_CODE: { type: String },
    AC_TYPE: { type: String },
    KYC_ID: { type: String },
    HOLDING_T6: { type: String },
    PBANK_NAME: { type: String },
    PERSONAL_9: { type: String },
    JOINT_NAM2: { type: String },
    TAX_STATUS: { type: String },
    EMAIL: { type: String },
    PANNO2: { type: String },
    HOLDING_T6: { type: String },
    SOCIAL_ST7: { type: String },
    GUARDIAN20: { type: String },
}, { versionKey: false });

const usermaster = new Schema({
    NAME: { type: String },
    EMAIL1: { type: String },
    ADDRESS1: { type: String },
    ADDRESS2:{ type: String },
    CITY: { type: String},
    PAN: { type: String},
    DOCNO: { type: String},
    CREATEDATE:{ type : Date},
}, { versionKey: false });

const schememasterdata = new Schema({
    AMC: { type: String },
    AMC_CODE: { type: String },
    SCH_NAME: { type: String },
    SCH_CODE: { type: String },
    Plan_Type: { type: String },
    ISIN: { type: String },
    Merged: { type: String },
    AMFI_Code: { type: String },
})


var users = mongoose.model('user_master', usermaster, 'user_master')
var transc = mongoose.model('trans_cams', transcams, 'trans_cams')
var transk = mongoose.model('trans_karvy', transkarvy, 'trans_karvy')
var transf= mongoose.model('trans_franklin', transfranklin, 'trans_franklin')
var transc2A = mongoose.model('trans_cams2A', transcams2A, 'trans_cams2A');
var camsn = mongoose.model('cams_nav', navcams, 'cams_nav');
var family = mongoose.model('familymember', members, 'familymember');
var folioc = mongoose.model('folio_cams', foliocams, 'folio_cams');
var foliok = mongoose.model('folio_karvy', foliokarvy, 'folio_karvy');
var foliof = mongoose.model('folio_franklin', foliofranklin, 'folio_franklin');
var allcamsn = mongoose.model('allnav', navcams, 'allnav');
var loginschema = mongoose.model('login', loginmodel, 'login');
var schememaster = mongoose.model('masterdata', schememasterdata , 'masterdata');

module.exports = { usermaster,users,transc,transk,transf,transc2A,camsn,family,folioc,foliok,foliof,allcamsn,loginschema,navcams,foliocams,foliokarvy,transcams,schememaster }